name: Build Release

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
          cache: true

      # Run tests before proceeding
      - name: Run Tests
        run: |
          cd cmd/td
          go test ./...

      # For PRs and non-tag pushes, just check if the release would work
      - name: GoReleaser Check
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: check
          workdir: ./cmd/td

      # For main branch pushes (not PRs), create a new tag
      - name: Bump version and push tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch
          
      # For tags, do the actual release
      - name: Import GPG key
        if: startsWith(github.ref, 'refs/tags/v')
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      # Add SSH key for AUR
      - name: Install SSH key for AUR
        if: startsWith(github.ref, 'refs/tags/v')
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          known_hosts: 'aur.archlinux.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEuBKrPzbh3BkSlpVbAgdHxT8GdwXqmyvz8yQBv+1zY+'
          
      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
          workdir: ./cmd/td
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          AUR_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
